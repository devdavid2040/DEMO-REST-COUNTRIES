{"ast":null,"code":"const initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: ''\n};\nexport default function reducer(state = initialState, action) {\n  console.log(action);\n\n  switch (action.type) {\n    case 'SET_COUNTRY_LIST':\n      {\n        console.log('voy a actualizar la lista de paises');\n        return { ...state,\n          countryList: action.payload\n        };\n      }\n\n    case 'SET_COUNTRY_BY_NAME':\n      {\n        let list;\n\n        if (state.filterByRegion !== '') {\n          list = state.coutryFilteredByRegion;\n        } else {\n          list = state.countryList;\n        }\n\n        const countryListByName = list.filter(country => country.name.toLowerCase().includes(action.payload.toLowerCase()));\n        return { ...state,\n          countryListByName\n        };\n      }\n\n    case 'FILTER_BY_REGION':\n      {\n        const {\n          regionSelected\n        } = action.payload;\n\n        if ('' === regionSelected) {\n          return { ...state,\n            coutryFilteredByRegion: [],\n            filterByRegion: ''\n          };\n        }\n\n        const coutryFilteredByRegion = state.countryList.filter(country => country.region === regionSelected);\n        return { ...state,\n          coutryFilteredByRegion,\n          filterByRegion: regionSelected\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"sources":["/home/david/Descargas/MDN DEMO LIST/flag-project-react/src/redux/reducers.js"],"names":["initialState","countryList","countryListByName","coutryFilteredByRegion","filterByRegion","reducer","state","action","console","log","type","payload","list","filter","country","name","toLowerCase","includes","regionSelected","region"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,iBAAiB,EAAE,EAFA;AAGnBC,EAAAA,sBAAsB,EAAE,EAHL;AAInBC,EAAAA,cAAc,EAAE;AAJG,CAArB;AASA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAACN,YAAvB,EAAqCO,MAArC,EAA6C;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,kBAAL;AAAyB;AACvBF,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA,eAAO,EAAE,GAAGH,KAAL;AAAYL,UAAAA,WAAW,EAAEM,MAAM,CAACI;AAAhC,SAAP;AACD;;AAED,SAAK,qBAAL;AAA4B;AAC1B,YAAIC,IAAJ;;AACA,YAAIN,KAAK,CAACF,cAAN,KAAyB,EAA7B,EAAiC;AAC/BQ,UAAAA,IAAI,GAAGN,KAAK,CAACH,sBAAb;AACD,SAFD,MAEO;AACLS,UAAAA,IAAI,GAAGN,KAAK,CAACL,WAAb;AACD;;AACD,cAAMC,iBAAiB,GAAGU,IAAI,CAACC,MAAL,CAAYC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCV,MAAM,CAACI,OAAP,CAAeK,WAAf,EAApC,CAAvB,CAA1B;AACA,eAAO,EAAE,GAAGV,KAAL;AAAYJ,UAAAA;AAAZ,SAAP;AACD;;AAGD,SAAK,kBAAL;AAAyB;AACvB,cAAM;AAAEgB,UAAAA;AAAF,YAAqBX,MAAM,CAACI,OAAlC;;AAEA,YAAI,OAAOO,cAAX,EAA2B;AACzB,iBAAO,EAAE,GAAGZ,KAAL;AAAYH,YAAAA,sBAAsB,EAAE,EAApC;AAAwCC,YAAAA,cAAc,EAAE;AAAxD,WAAP;AACD;;AAED,cAAMD,sBAAsB,GAAGG,KAAK,CAACL,WAAN,CAAkBY,MAAlB,CAA0BC,OAAD,IAAaA,OAAO,CAACK,MAAR,KAAmBD,cAAzD,CAA/B;AAEA,eAAO,EAAE,GAAGZ,KAAL;AAAYH,UAAAA,sBAAZ;AAAoCC,UAAAA,cAAc,EAAEc;AAApD,SAAP;AACD;;AAED;AAAS;AACP,eAAOZ,KAAP;AACD;AAhCH;AAkCD","sourcesContent":["const initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: '',\n\n}\n\n\nexport default function reducer(state=initialState, action) {\n  console.log(action)\n  switch (action.type) {\n    case 'SET_COUNTRY_LIST': {\n      console.log('voy a actualizar la lista de paises')\n      return { ...state, countryList: action.payload }\n    }\n\n    case 'SET_COUNTRY_BY_NAME': {\n      let list\n      if (state.filterByRegion !== '') {\n        list = state.coutryFilteredByRegion\n      } else {\n        list = state.countryList\n      }\n      const countryListByName = list.filter(country => country.name.toLowerCase().includes(action.payload.toLowerCase()))\n      return { ...state, countryListByName }\n    }\n\n\n    case 'FILTER_BY_REGION': {\n      const { regionSelected } = action.payload;\n\n      if ('' === regionSelected) {\n        return { ...state, coutryFilteredByRegion: [], filterByRegion: '', };\n      }\n\n      const coutryFilteredByRegion = state.countryList.filter((country) => country.region === regionSelected);\n\n      return { ...state, coutryFilteredByRegion, filterByRegion: regionSelected }\n    }\n\n    default: {\n      return state\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}