{"ast":null,"code":"var _jsxFileName = \"/home/david/Descargas/MDN DEMO LIST/flag-project-react/client/src/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CountryList from '../components/Country-list';\n/* import { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducer' */\n\nimport ActionList from './components/Action-list';\nimport Header from './components/Header';\nimport CountryPage from './components/CountryPage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; //EXPORTADO A CARPETA REDUX/REDUCERS.JS\n\n/* const initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: '',\n\n}\n\n//EXPORTADO A CARPETA REDUX/STORE.JS\nconst store = createStore(reducer, initialState) */\n//ELIMINACION DE LA IMPORTACION DEL STORE EN app.js, SE TRASLADA ESO A INDEX.JS\n\n/* import store from \"./redux/store\" */\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode';\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)');\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n    return () => {\n      mq.removeListener(changeMedia);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: mainClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    setDarkMode: setDarkMode,\n    darkMode: darkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/country/:id\",\n    component: CountryPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CountryList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/david/Descargas/MDN DEMO LIST/flag-project-react/client/src/App.jsx"],"names":["React","useState","useEffect","CountryList","ActionList","Header","CountryPage","BrowserRouter","Router","Route","Switch","App","darkMode","setDarkMode","checked","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA;;;;AAGA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,QAIO,kBAJP,C,CAMA;;AACA;;;;;;;;;;AAWA;;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMe,SAAS,GAAGJ,QAAQ,GAAG,cAAH,GAAoB,eAA9C;;AAEA,WAASK,WAAT,CAAqBC,EAArB,EAAyB;AACvBL,IAAAA,WAAW,CAACK,EAAE,CAACC,OAAJ,CAAX;AACAJ,IAAAA,UAAU,CAACG,EAAE,CAACC,OAAJ,CAAV;AACD;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,EAAE,GAAGE,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAX;AACAH,IAAAA,EAAE,CAACI,WAAH,CAAeL,WAAf;AACAJ,IAAAA,WAAW,CAACK,EAAE,CAACC,OAAJ,CAAX;AACAJ,IAAAA,UAAU,CAACG,EAAE,CAACC,OAAJ,CAAV;AACA,WAAO,MAAM;AACXD,MAAAA,EAAE,CAACK,cAAH,CAAkBN,WAAlB;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AASA,sBACE;AAAM,IAAA,SAAS,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEH,WAArB;AAAkC,IAAA,QAAQ,EAAED,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,SAAS,EAAEN,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CAFF,CAFJ,CADF;AAgBD;;AAED,eAAeK,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CountryList from '../components/Country-list'\n/* import { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducer' */\nimport ActionList from './components/Action-list'\nimport Header from './components/Header'\nimport CountryPage from './components/CountryPage'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\n\n//EXPORTADO A CARPETA REDUX/REDUCERS.JS\n/* const initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: '',\n\n}\n\n//EXPORTADO A CARPETA REDUX/STORE.JS\nconst store = createStore(reducer, initialState) */\n\n//ELIMINACION DE LA IMPORTACION DEL STORE EN app.js, SE TRASLADA ESO A INDEX.JS\n/* import store from \"./redux/store\" */\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia)\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n  return (\n    <main className={mainClass}>\n     {/*  <Provider store={store}> */}\n        <Router>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Switch>\n            <Route path=\"/country/:id\" component={CountryPage} />\n            <Route path=\"/\">\n              <ActionList />\n              <CountryList />\n            </Route>\n          </Switch>\n        </Router>\n    {/*   </Provider> */}\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}